pipeline {
    agent any

    environment {
        IMAGE_NAME = 'app-java-21-teste'
        IMAGE_TAG = '1.0.0'
        KUBECONFIG = credentials('kubeconfig-k3')
        JAVA_HOME = tool name: 'JDK 21', type: 'JDK'  // Defina o JDK 21 aqui
        PATH = "$JAVA_HOME/bin:$PATH"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    if (fileExists('app-java-21-teste')) {
                        deleteDir()
                    }
                }
                withCredentials([usernamePassword(credentialsId: 'github-token-credentials-id', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git clone https://$GITHUB_USER:$GITHUB_TOKEN@github.com/gamartins01311/app-java-21-teste.git
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                dir('app-java-21-teste') {
                    sh 'chmod +x ./mvnw'  // Adiciona permissão de execução
                    sh './mvnw clean package -DskipTests'  // Executa com Maven Wrapper
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $IMAGE_NAME:$IMAGE_TAG ."
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $IMAGE_NAME:$IMAGE_TAG
                    '''
                }
            }
        }

        stage('Deploy to K3s') {
            steps {
                script {
                    sh 'mkdir -p ~/.kube'
                    writeFile file: '~/.kube/config', text: credentials('kubeconfig-k3')
                }
                sh '''
                    kubectl apply -f infra/manifests/deployment.yaml
                    kubectl apply -f infra/manifests/service.yaml
                    kubectl apply -f infra/manifests/gateway.yaml
                    kubectl apply -f infra/manifests/virtualservice.yaml
                    kubectl apply -f infra/manifests/destinationrule.yaml
                '''
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    if (fileExists('app-java-21-teste')) {
                        deleteDir()
                    }
                }
            }
        }
    }
}
